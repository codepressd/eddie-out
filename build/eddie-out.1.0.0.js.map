{"version":3,"sources":["webpack:///webpack/bootstrap fe8c6bfcf25f9ac3f33d","webpack:///./js/index.js","webpack:///./js/usgs.js","webpack:///./js/gmaps.js","webpack:///./~/google-maps/lib/Google.js","webpack:///./js/gcharts.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;;AAEA;AACA;;AAEA,wBAAuB,mCAAmC;;AAE1D;;AAEA;;AAEA,MAAK;AACL,EAAC;;;;;;;AC/BD;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET,MAAK;AACL;AACA;;AAEA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA,cAAa;;;AAGb;AACA;AACA;AACA,oCAAmC,gBAAgB;AACnD;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,uB;;;;;;ACtDA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,EAAC;;AAED;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA,UAAS;AACT,MAAK;AACL;;AAEA,uB;;;;;;ACtEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;;AAEA,EAAC;;;AAGD;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAa,yBAAyB;AACtC;AACA;;AAEA;AACA;AACA;;AAEA,cAAa,sBAAsB;AACnC;AACA;;AAEA;AACA;;;AAGA;;AAEA,EAAC;;;;;;;AC1ND;;AAEA;;AAEA;AACA;AACA,wCAAuC,qCAAqC;;AAE5E,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB,iCAAiC,gBAAgB,EAAE;AAC3E,yBAAwB;AACxB;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA","file":"eddie-out.1.0.0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fe8c6bfcf25f9ac3f33d\n **/","/*Compiled Javascript/output to screen*/\r\n\r\nvar usgs = require('./usgs');\r\nvar gMap = require('./gmaps');\r\nvar gCharts = require('./gcharts');\r\n\r\nconsole.log(gCharts);\r\nvar index = null;\r\n$(function() {\r\n\t/*when x is clicked on lightbox it closes and clears data*/\r\n\r\n    $('#close').on('click', function() {\r\n        $('.chart').html(\"\");\r\n        $('.gauge').html(\"\");\r\n        $('.lightbox').removeClass('showLightbox');\r\n        index = null;\r\n    });\r\n\r\n  \r\n    var promise = usgs.getData();\r\n\r\n    promise.done(function() {\r\n        gCharts.init();\r\n\r\n        for (var i = 0; i < usgs.filteredLocations.length; i++) {\r\n        \t\r\n            gMap.addRiverTag(usgs.filteredLocations[i].lat, usgs.filteredLocations[i].lng, usgs.filteredLocations[i].name, usgs.filteredLocations[i].flow);\r\n\r\n        }\r\n\r\n    });\r\n});\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/*USGS Javascript*/\r\nvar usgs = {\r\n\r\n    riverLocations: [],\r\n\r\n    filteredLocations: [],\r\n\r\n    dataFilter: function(value) {\r\n        return value.flow.length > 2;\r\n    },\r\n\r\n    getData: function() {\r\n\r\n        var url = 'https://crossorigin.me/http://waterservices.usgs.gov/nwis/dv/?format=json&sitesperiod=P3D&parameterCd=00060';\r\n\r\n        return $.getJSON(url, function(data, status, xhr) {\r\n\r\n            usgs.convertData(data.value.timeSeries);\r\n\r\n        });\r\n\r\n    },\r\n    /*Takes the raw data and grabs the information I need*/\r\n    convertData: function(data) {\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            usgs.riverLocations.push({\r\n                name: data[i].sourceInfo.siteName,\r\n                lat: data[i].sourceInfo.geoLocation.geogLocation.latitude,\r\n                lng: data[i].sourceInfo.geoLocation.geogLocation.longitude,\r\n                flow: scrubData(data[i].values[0].value)\r\n            });\r\n\r\n\r\n            function scrubData(val) {\r\n                var fixedArray = [];\r\n                if (val) {\r\n                    for (var j = 0; j < val.length; j++) {\r\n                        var date = val[j].dateTime.slice(0, 10);\r\n                        fixedArray.push([date, parseInt(val[j].value)]);\r\n                    }\r\n                    return fixedArray;\r\n                } else {\r\n                    return \"no value\"\r\n                }\r\n            }\r\n\r\n        }\r\n        /*filters out all every location without a flow value */\r\n        usgs.filteredLocations = usgs.riverLocations.filter(usgs.dataFilter);\r\n\r\n    }\r\n}\r\n\r\nmodule.exports = usgs;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/usgs.js\n ** module id = 1\n ** module chunks = 0\n **/","/*Google Maps Javascript File*/\r\nvar GoogleMapsLoader = require('google-maps');\r\nvar gCharts = require('./gcharts');\r\nvar usgs = require('./usgs');\r\n\r\n/*Google Maps Loader*/\r\n\r\nGoogleMapsLoader.KEY = 'AIzaSyDeEhJNVidPVfBn1WRHALIczTr2fEQpytQ';\r\nGoogleMapsLoader.load(function(google){\r\n    \r\n    gMap.init();\r\n\r\n});\r\n\r\nvar index = null;\r\n/*Google Maps*/\r\nvar gMap = {\r\n\r\n    markers: [],\r\n\r\n    map: null,\r\n\r\n    mapArea: $('#map-area')[0],\r\n\r\n    mapOptions: {\r\n        zoom: 5,\r\n        center: {\r\n            lat: 39.09024,\r\n            lng: -92.712891\r\n        }\r\n    },\r\n\r\n    init: function() {\r\n\r\n        this.map = new google.maps.Map(this.mapArea, this.mapOptions);\r\n    },\r\n\r\n    /*adds tags/markers to the map*/\r\n    addRiverTag: function(lat, lng, name, flow) {\r\n        var image = './img/raft-icon.png';\r\n\r\n        var latLng = new google.maps.LatLng(lat, lng);\r\n\r\n        var marker = new google.maps.Marker({\r\n            position: latLng,\r\n            title: name,\r\n            icon: image\r\n        });\r\n\r\n        marker.setMap(this.map);\r\n        gMap.markers.push(marker);\r\n\r\n        /*\r\n        Adds a listener to the markers and pops up information about the specific site\r\n        Soon I will be removing this portion from this object.\r\n\r\n        */\r\n        marker.addListener('click', function() {\r\n            var index = gMap.markers.indexOf(this);\r\n\r\n            $('.lightbox').addClass('showLightbox');\r\n\r\n            gCharts.doDrawAreaChart(usgs.filteredLocations[index]);\r\n            gCharts.doDrawGauge(usgs.filteredLocations[index]);\r\n            \r\n\r\n        })\r\n    },\r\n}\r\n\r\nmodule.exports = gMap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/gmaps.js\n ** module id = 2\n ** module chunks = 0\n **/","(function(root, factory) {\n\n\tif (root === null) {\n\t\tthrow new Error('Google-maps package can be used only in browser');\n\t}\n\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\troot.GoogleMapsLoader = factory();\n\t}\n\n})(typeof window !== 'undefined' ? window : null, function() {\n\n\n\t'use strict';\n\n\n\tvar googleVersion = '3.18';\n\n\tvar script = null;\n\n\tvar google = null;\n\n\tvar loading = false;\n\n\tvar callbacks = [];\n\n\tvar onLoadEvents = [];\n\n\tvar originalCreateLoaderMethod = null;\n\n\n\tvar GoogleMapsLoader = {};\n\n\n\tGoogleMapsLoader.URL = 'https://maps.googleapis.com/maps/api/js';\n\n\tGoogleMapsLoader.KEY = null;\n\n\tGoogleMapsLoader.LIBRARIES = [];\n\n\tGoogleMapsLoader.CLIENT = null;\n\n\tGoogleMapsLoader.CHANNEL = null;\n\n\tGoogleMapsLoader.LANGUAGE = null;\n\n\tGoogleMapsLoader.REGION = null;\n\n\tGoogleMapsLoader.VERSION = googleVersion;\n\n\tGoogleMapsLoader.WINDOW_CALLBACK_NAME = '__google_maps_api_provider_initializator__';\n\n\n\tGoogleMapsLoader._googleMockApiObject = {};\n\n\n\tGoogleMapsLoader.load = function(fn) {\n\t\tif (google === null) {\n\t\t\tif (loading === true) {\n\t\t\t\tif (fn) {\n\t\t\t\t\tcallbacks.push(fn);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloading = true;\n\n\t\t\t\twindow[GoogleMapsLoader.WINDOW_CALLBACK_NAME] = function() {\n\t\t\t\t\tready(fn);\n\t\t\t\t};\n\n\t\t\t\tGoogleMapsLoader.createLoader();\n\t\t\t}\n\t\t} else if (fn) {\n\t\t\tfn(google);\n\t\t}\n\t};\n\n\n\tGoogleMapsLoader.createLoader = function() {\n\t\tscript = document.createElement('script');\n\t\tscript.type = 'text/javascript';\n\t\tscript.src = GoogleMapsLoader.createUrl();\n\n\t\tdocument.body.appendChild(script);\n\t};\n\n\n\tGoogleMapsLoader.isLoaded = function() {\n\t\treturn google !== null;\n\t};\n\n\n\tGoogleMapsLoader.createUrl = function() {\n\t\tvar url = GoogleMapsLoader.URL;\n\n\t\turl += '?callback=' + GoogleMapsLoader.WINDOW_CALLBACK_NAME;\n\n\t\tif (GoogleMapsLoader.KEY) {\n\t\t\turl += '&key=' + GoogleMapsLoader.KEY;\n\t\t}\n\n\t\tif (GoogleMapsLoader.LIBRARIES.length > 0) {\n\t\t\turl += '&libraries=' + GoogleMapsLoader.LIBRARIES.join(',');\n\t\t}\n\n\t\tif (GoogleMapsLoader.CLIENT) {\n\t\t\turl += '&client=' + GoogleMapsLoader.CLIENT + '&v=' + GoogleMapsLoader.VERSION;\n\t\t}\n\n\t\tif (GoogleMapsLoader.CHANNEL) {\n\t\t\turl += '&channel=' + GoogleMapsLoader.CHANNEL;\n\t\t}\n\n\t\tif (GoogleMapsLoader.LANGUAGE) {\n\t\t\turl += '&language=' + GoogleMapsLoader.LANGUAGE;\n\t\t}\n\n\t\tif (GoogleMapsLoader.REGION) {\n\t\t\turl += '&region=' + GoogleMapsLoader.REGION;\n\t\t}\n\n\t\treturn url;\n\t};\n\n\n\tGoogleMapsLoader.release = function(fn) {\n\t\tvar release = function() {\n\t\t\tGoogleMapsLoader.KEY = null;\n\t\t\tGoogleMapsLoader.LIBRARIES = [];\n\t\t\tGoogleMapsLoader.CLIENT = null;\n\t\t\tGoogleMapsLoader.CHANNEL = null;\n\t\t\tGoogleMapsLoader.LANGUAGE = null;\n\t\t\tGoogleMapsLoader.REGION = null;\n\t\t\tGoogleMapsLoader.VERSION = googleVersion;\n\n\t\t\tgoogle = null;\n\t\t\tloading = false;\n\t\t\tcallbacks = [];\n\t\t\tonLoadEvents = [];\n\n\t\t\tif (typeof window.google !== 'undefined') {\n\t\t\t\tdelete window.google;\n\t\t\t}\n\n\t\t\tif (typeof window[GoogleMapsLoader.WINDOW_CALLBACK_NAME] !== 'undefined') {\n\t\t\t\tdelete window[GoogleMapsLoader.WINDOW_CALLBACK_NAME];\n\t\t\t}\n\n\t\t\tif (originalCreateLoaderMethod !== null) {\n\t\t\t\tGoogleMapsLoader.createLoader = originalCreateLoaderMethod;\n\t\t\t\toriginalCreateLoaderMethod = null;\n\t\t\t}\n\n\t\t\tif (script !== null) {\n\t\t\t\tscript.parentElement.removeChild(script);\n\t\t\t\tscript = null;\n\t\t\t}\n\n\t\t\tif (fn) {\n\t\t\t\tfn();\n\t\t\t}\n\t\t};\n\n\t\tif (loading) {\n\t\t\tGoogleMapsLoader.load(function() {\n\t\t\t\trelease();\n\t\t\t});\n\t\t} else {\n\t\t\trelease();\n\t\t}\n\t};\n\n\n\tGoogleMapsLoader.onLoad = function(fn) {\n\t\tonLoadEvents.push(fn);\n\t};\n\n\n\tGoogleMapsLoader.makeMock = function() {\n\t\toriginalCreateLoaderMethod = GoogleMapsLoader.createLoader;\n\n\t\tGoogleMapsLoader.createLoader = function() {\n\t\t\twindow.google = GoogleMapsLoader._googleMockApiObject;\n\t\t\twindow[GoogleMapsLoader.WINDOW_CALLBACK_NAME]();\n\t\t};\n\t};\n\n\n\tvar ready = function(fn) {\n\t\tvar i;\n\n\t\tloading = false;\n\n\t\tif (google === null) {\n\t\t\tgoogle = window.google;\n\t\t}\n\n\t\tfor (i = 0; i < onLoadEvents.length; i++) {\n\t\t\tonLoadEvents[i](google);\n\t\t}\n\n\t\tif (fn) {\n\t\t\tfn(google);\n\t\t}\n\n\t\tfor (i = 0; i < callbacks.length; i++) {\n\t\t\tcallbacks[i](google);\n\t\t}\n\n\t\tcallbacks = [];\n\t};\n\n\n\treturn GoogleMapsLoader;\n\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/google-maps/lib/Google.js\n ** module id = 3\n ** module chunks = 0\n **/","/*Google Charts Javascript*/\r\n\r\nvar gCharts = {\r\n\r\n    init: function() {\r\n        //console.log('gcharts is firing');\r\n        google.charts.load('current', { 'packages': ['corechart', 'gauge'] });\r\n\r\n    },\r\n\r\n    /*Draws the area chart*/\r\n\r\n    doDrawAreaChart: function(site) {\r\n        google.charts.setOnLoadCallback(drawAreaChart(site));\r\n\r\n        function drawAreaChart(site) {\r\n\r\n            var data = google.visualization.arrayToDataTable([\r\n                ['Date', 'Flow'],\r\n                [site.flow[0][0], site.flow[0][1]],\r\n                [site.flow[1][0], site.flow[1][1]],\r\n                [site.flow[2][0], site.flow[2][1]]\r\n            ]);\r\n\r\n            var options = {\r\n                title: site.name,\r\n                backgroundColor: '#EAEAEA',\r\n                hAxis: { title: 'Date', titleTextStyle: { color: '#333' } },\r\n                vAxis: { minValue: 0 }\r\n            };\r\n\r\n            var chart = new google.visualization.AreaChart($('.chart')[0]);\r\n            chart.draw(data, options);\r\n        }\r\n    },\r\n\r\n    /*Draws the Gauge*/\r\n\r\n    doDrawGauge: function(site) {\r\n        google.charts.setOnLoadCallback(drawGauge(site));\r\n\r\n        function drawGauge(site) {\r\n\r\n            var data = google.visualization.arrayToDataTable([\r\n                ['Label', 'Value'],\r\n                ['River CFS', site.flow[0][1]]\r\n            ]);\r\n\r\n            var options = {\r\n                width: '100%',\r\n                height: '100%',\r\n                redFrom: 900,\r\n                redTo: 1000,\r\n                yellowFrom: 700,\r\n                yellowTo: 900,\r\n                minorTicks: 10\r\n            };\r\n\r\n            var chart = new google.visualization.Gauge($('.gauge')[0]);\r\n\r\n            chart.draw(data, options);\r\n\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = gCharts;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/gcharts.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}